{"version":3,"sources":["webpack:///./src/app/routes/user-page/module.ts","webpack:///./src/app/routes/user-page/router.ts","webpack:///./src/app/routes/user-page/user-page.component.html","webpack:///./src/app/routes/user-page/user-page.component.ts"],"names":[],"mappings":"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","file":"routes-user-page-module.js","sourcesContent":["/* \nImports \n*/\n    // Angular\n    import { NgModule } from '@angular/core';\n    import { CommonModule } from '@angular/common';\n\n    // Inner\n    import { Routing } from './router';\n    import { UserPageComponent } from './user-page.component';\n//\n\n\n/* \nDefinition \n*/\n    @NgModule({\n        declarations: [ UserPageComponent ],\n        imports: [ \n            CommonModule, \n            Routing\n        ]\n    })\n//\n\n\n/* \nExport \n*/\n    export class Module {};\n//","/* \nImports \n*/\n    import { ModuleWithProviders } from '@angular/core';\n    import { Routes, RouterModule } from '@angular/router';\n    import { UserPageComponent } from './user-page.component';\n//\n\n\n/* \nDefinition \n*/\n    const route: Routes = [\n        {\n            path: '',\n            component: UserPageComponent\n        }\n    ];\n//\n\n\n/* \nExport \n*/\n    export const Routing: ModuleWithProviders = RouterModule.forChild(route);\n//","module.exports = \"<h2>Hello {{gamerId}} !</h2>\\n\\n<p>Nombre de clics effectu√©s en 10s : {{score}}</p>\\n<p>Temps restant : {{time}}s</p>\\n<div class=\\\"state state-{{ time }}\\\"></div>\\n\\n<div class=\\\"game\\\">\\n    <img src=\\\"assets/images/tapOff.png\\\" alt=\\\"\\\" (click)=\\\"tap()\\\" *ngIf=\\\"isOdd\\\">\\n    <img src=\\\"assets/images/tapOn.png\\\" alt=\\\"\\\" (click)=\\\"tap()\\\" *ngIf=\\\"!isOdd\\\">\\n</div>\\n\"","/* \nImports & definition \n*/\n  // Imports\n  import { Component, OnInit } from '@angular/core';\n\n  // Inner\n  import { IdentityModel } from '../../models/identity.model';\n  import { ApiResponseModel } from \"../../models/api.reponse.model\";\n  import { AuthService } from \"../../services/auth/auth-service.service\";\n  import { ScoreService, ScoreModel } from '../../services/scores/score/score-service.service';\n  import { HttpClient } from '@angular/common/http';\n  import { Router } from '@angular/router';\n\n  // Definition\n  @Component({\n    selector: 'app-user-page',\n    templateUrl: './user-page.component.html',\n    providers: [ AuthService ]\n  })\n//\n\n/* \nExport\n*/\n  export class UserPageComponent implements OnInit {\n\n    public gamerId: any;\n    public countClick: number;\n\n    add: ScoreModel = {\n      score: 0,\n      date: new Date(),\n      userId: '',\n    };\n    \n    started = false;\n    score = 0;\n    time = 10;\n    isOdd = true;\n    interval = null;\n\n    /* \n    Config.\n    */\n      // Module injection\n      constructor(\n        private AuthService: AuthService,\n        private scores: ScoreService,\n        private router: Router\n      ) {\n        this.gamerId = null;\n      };\n    //\n\n    /*\n    Methods\n    */\n    //\n    public getIdUser = () => {\n      this.AuthService.getUserName().then( result => \n        this.gamerId = result.data._id\n      );\n    };\n  \n    /* \n    Hooks\n    */\n      \n      ngOnInit() { \n        this.getIdUser();\n      };\n\n      decrease() {\n        this.time--;\n        if (this.time === 0) {\n          this.finish();\n        }\n      }\n    \n      tap() {\n        // If start to play\n        if (!this.started) {\n          this.interval = setInterval(this.decrease.bind(this), 1000);\n          this.started = true;\n        }\n        // If time is not finish\n        if (this.time > 0) {\n          this.score++;\n          this.isOdd = !this.isOdd;\n          this.countClick = this.score;\n        }\n      }\n\n      finish() {\n        clearInterval(this.interval);\n        this.add.score = this.score;\n        this.add.userId = this.gamerId;\n\n        // Send score to database\n        this.scores.addScore(this.add).subscribe(() => {\n          this.router.navigateByUrl('/tap');\n        }, (err) => {\n          console.log(err);\n        });\n      }\n  }\n//"],"sourceRoot":""}