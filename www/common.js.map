{"version":3,"sources":["webpack:///./src/app/services/scores/score/score-service.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAA2C;AACO;AAEb;AACI;AACiC;AAY1E;IACE,sBAAoB,IAAgB,EAAU,MAAc,EAAU,IAAiB;QAAnE,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAEpF,8BAAO,GAAf,UAAgB,MAAoB,EAAE,IAAiB,EAAE,KAAkB;QACzE,IAAI,IAAI,CAAC;QAET,IAAI,MAAM,KAAK,MAAM,EAAE;YACrB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAS,IAAM,EAAE,KAAK,CAAE,CAAC;SAChD;aAAM;YACL,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAS,IAAM,CAAC,CAAC;SACvC;QAED,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CACvB,0DAAG,CAAC,UAAC,IAAI;YACP,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CACH,CAAC;QACF,OAAO,OAAO,CAAC;IACjB,CAAC;IAEM,+BAAQ,GAAf,UAAgB,KAAiB;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAC5C,CAAC;IAEM,gCAAS,GAAhB;QACE,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACpC,CAAC;IA3BU,YAAY;QAJxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU,EAAkB,sDAAM,EAAgB,+EAAW;OAD5E,YAAY,CA4BxB;IAAD,mBAAC;CAAA;AA5BwB","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth/auth-service.service';\n\nexport interface ScoreModel {\n  score: Number;\n  date: Date;\n  userId: String\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ScoreService {\n  constructor(private http: HttpClient, private router: Router, private auth: AuthService) { }\n\n  private request(method: 'post'|'get', type: 'add'|'all', score?: ScoreModel): Observable<any> {\n    let base;\n\n    if (method === 'post') {\n      base = this.http.post(`/game/${type}`, score );\n    } else {\n      base = this.http.get(`/game/${type}`);\n    }\n\n    const request = base.pipe(\n      map((data) => {\n        return data;\n      })\n    );\n    return request;\n  }\n\n  public addScore(score: ScoreModel): Observable<any> {\n    return this.request('post', 'add', score);\n  }\n\n  public getScores(): Observable<any> {\n    console.log('get score service ok');\n    return this.request('get', 'all');\n  }\n}"],"sourceRoot":""}